version: '3.7'
services:
  # auth:
  #   container_name: auth
  #   build:
  #     context: .
  #     target: auth-dev
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - ${SERVER_PORT}:${SERVER_PORT}
  #   command: npm run start:dev
  #   env_file:
  #     - .env
  #   networks:
  #     - webnet
  #   depends_on:
  #     - mongo
  #     - kafka
  #     - zookeeper

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_ADMIN_USERNAME}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_ADMIN_PASSWORD}
  #     ME_CONFIG_MONGODB_URL: ${MONGODB_URL}
  #   networks:
  #     - webnet
  #   depends_on:
  #     - mongo
  #   env_file:
  #     - .env

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ADMIN_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ADMIN_PASSWORD}
    # networks:
    #   - webnet
    volumes:
      - mongodata:/data/db
    env_file:
      - .env
    ports:
      - 27017:27017

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
# networks:
  # webnet:
volumes:
  mongodata: